-# Parameters:
-#   talk

%form{ :'accept-charset' => 'UTF-8',
       :action           => fixed_url("/#{ @locale }/#{ ORG_PAGE_PREFIX }talks/#{ talk.id }"),
       :method           => 'post' }
  %input{ :type => :hidden, :name => :_method, :value => :put }

  = haml :_jquery_ui_for_forms

  - if talk.errors.any?
    #form_error_explanation
      %h2
        - if talk.errors.count == 1
          = t('activerecord.errors.template.header.one',
              :model => Talk.model_name.human)
        - else
          = t('activerecord.errors.template.header.other',
              :count => talk.errors.count,
              :model => Talk.model_name.human)

      %ul
        - talk.errors.full_messages.each do |msg|
          %li
            = msg

  %dl.fields
    - required = Talk.attribute_constraints_on(:title)[:required]
    - label_html_classes = []
    - label_html_classes << 'required' if required
    .field
      %dt.label
        %label{ :for   => 'talk_title',
                :class => label_html_classes }<
          = label_from_attribute_name(Talk, :title)
      %dd.input
        %input{ :id       => 'talk_title',
                :name     => 'talk[title]',
                :required => required,
                :type     => :text,
                :value    => talk.title }

    - required = Talk.attribute_constraints_on(:abstract)[:required]
    - label_html_classes = []
    - label_html_classes << 'required' if required
    .field
      %dt.label
        %label{ :for   => 'talk_abstract',
                :class => label_html_classes }<
          = label_from_attribute_name(Talk, :abstract)
      %dd.input
        %textarea{ :id   => 'talk_abstract',
                   :name => 'talk[abstract]' }<
          = preserve do
            &= talk.abstract

    .disabled.field
      %dt
        = label_from_attribute_name(Talk, :type)
      %dd
        = talk.translated_type_name

    - [:date, :time, :room_or_auditorium].each do |attr|
      - required = Talk.attribute_constraints_on(attr)[:required]
      - label_html_classes = []
      - label_html_classes << 'required' if required
      .field
        %dt.label
          %label{ :for   => "talk_#{ attr }",
                  :class => label_html_classes }<
            = label_from_attribute_name(Talk, attr)
        %dd.input
          %input{ :id       => "talk_#{ attr }",
                  :name     => "talk[#{ attr }]",
                  :required => required,
                  :type     => input_html_type_for_attribute(Talk, attr),
                  :value    => talk.public_send(attr) }

  .actions
    %button.update{ :type => :submit, :name => 'button', :value => 'update' }
      = t 'buttons.submit'
    %a.button.cancel{ :href => fixed_url("/#{ @locale }/#{ ORG_PAGE_PREFIX }talks/#{ @talk.id }"),
                      :role => 'button' }
      = t 'buttons.cancel'

