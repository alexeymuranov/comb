- if @filtering_by
  = filtering_form @filtering_by, @filtering_values,
                   :params_key_prefix => 'filter',
                   :action_url        => fixed_url_with_locale("/#{ @page }"),
                   :hidden_parameters => @view_parameters.key?(:per_page) ? { 'view' => { :per_page => @view_parameters[:per_page] } } : {}

  %strong #{ @filtered_participants_count } / #{ Participant.count }

- if @view_parameters
  = paginating_form @view_parameters,
                    :params_key_prefix => 'view',
                    :action_url        => fixed_url_with_locale("/#{ @page }"),
                    :hidden_parameters => @filtering_values ? { 'filter' => @filtering_values } : {}

.technical
  %pre.technical
    SQL:
  %code.technical
    = @participants.to_sql

%table.index
  %thead
    %tr
      %th/
      - @attribute_headers.each do |header|
        %th
          = header
      %th{ :colspan => @participation_procs.count }
        = @participations_header
      %th{ :colspan => main_organiser_logged_in? ? 2 : 1 }/

  %tbody
    - @participants.each do |participant|
      %tr{ :id => "participant_#{ participant.id }" }
        %td.center
          %samp
            %strong
              = participant.approved? ? '✓' : '—'

        - @attribute_procs.each do |p|
          %td
            &= p[participant]

        - @participation_procs.each do |p|
          %td.center
            &= p[participant]

        %td
          %a.button.show{ :href => fixed_url_with_locale("/org/participants/#{ participant.id }") }<
            = t 'actions.show'

        - if main_organiser_logged_in?
          %td
            %a.button.edit{ :href => fixed_url_with_locale("/org/participants/#{ participant.id }/edit") }<
              = t 'actions.update'

- if @page == :"org/participants"
  - if main_organiser_logged_in?
    %a.button.new{ :href => fixed_url_with_locale("/org/participants/new"),
                   :role => 'button' }<
      = t 'actions.add'

  %hr/
  %div.download_buttons
    %span.prompt
      = t 'formats.attribute_name:', :attribute => t('actions.download')

    - download_url = fixed_url("/download/participants.csv")
    - if @filtering_values
      - download_url << '?' << url_query_from_nested_hash('filter' => @filtering_values)
    %a.button.download{ :href => download_url,
                        :role => 'button' }<
      CSV
