- hidden_parameters = { 'view' => @view_parameters.except(:page) }
%form{ :id     => 'clear_filter_form',
       :action => '#filter_form' }
  = hidden_fields_from_nested_hash hidden_parameters

%form{ :id     => 'filter_form',
       :action => '#filter_form' }
  = hidden_fields_from_nested_hash hidden_parameters

  = smart_filtering_fields @filtering_by, @filtering_values, nil,
                          :params_key_prefix => 'filter'

  - custom_filter_fields_empty = @custom_filtering_parameters.empty?
  %table#custom_filter.filter{ :class  => (custom_filter_fields_empty ? nil : 'filtered'),
                               :border => 1 }
    %thead
      - only_participants_with_talk_proposals = @custom_filtering_parameters[:participants_with_talk_proposals]
      - speaker_talk_types                    = @custom_filtering_parameters[:speaker_talk_types]
      - participant_participations_count      = @custom_filtering_parameters[:participant_participations_count]
      %tr
        %th{ :class => (only_participants_with_talk_proposals.nil? ? nil : 'filtered') }
          %label{ :for => 'custom_filter_participants_with_talk_proposals_yes' }<
            = header_from_attribute_name(Participation, :talk_proposal)
        %th{ :class => (speaker_talk_types.nil? ? nil : 'filtered') }
          %label{ :for => 'custom_filter_speaker_talk_types' }<
            = header_from_attribute_name(Participation, :speaker)
        %th{ :class => (participant_participations_count.nil? ? nil : 'filtered') }
          %label{ :for => 'custom_filter_participant_participations_count' }<
            = header_from_attribute_name(Participant, :participations)
      - unless custom_filter_fields_empty
        %tr
          - if only_participants_with_talk_proposals.nil?
            %td/
          - else
            %td.boolean.filtering_value<
              âœ“
          - if speaker_talk_types.nil?
            %td/
          - else
            %td.string.filtering_value<
              = speaker_talk_types.constantize.model_name.human
          - if participant_participations_count.nil?
            %td/
          - else
            %td.number.filtering_value<
              = participant_participations_count

      %tr
        %td.boolean.field
          %input{ :id      => 'custom_filter_participants_with_talk_proposals_yes',
                  :type    => :checkbox,
                  :name    => 'custom_filter[participants_with_talk_proposals]',
                  :value   => '1',
                  :checked => only_participants_with_talk_proposals }
        %td.select.field
          %select{ :id   => 'custom_filter_speaker_talk_types',
                   :name => 'custom_filter[speaker_talk_types]' }
            %option
            - ['PlenaryTalk', 'ParallelTalk'].each do |type|
              %option{ :value    => type,
                       :selected => (type == speaker_talk_types) }
                = type.constantize.model_name.human
        %td.number.field
          %input{ :id           => 'custom_filter_participant_participations_count',
                  :type         => :number,
                  :name         => 'custom_filter[participant_participations_count]',
                  :value        => @custom_filtering_parameters[:participant_participations_count],
                  :autocomplete => :off,
                  :size         => 3 }

  .actions<
    %button._get_{ :type  => :submit }<
      = t 'actions.filter'

    %button._get_{ :type  => :submit, :form  => 'clear_filter_form' }<
      = t 'actions.clear'

%strong<
  - if @filtered_participants_count
    #{ @filtered_participants_count } / #{ Participant.count }
  - else
    [ #{ Participant.count } ]

- hidden_parameters = { 'filter'        => @filtering_values,
                        'custom_filter' => @custom_filtering_parameters,
                        'view'          => @view_parameters.except(:page, :per_page) }
= paginating_form @page_count, @view_parameters,
                  :params_key_prefix => 'view',
                  :hidden_parameters => hidden_parameters

- hidden_parameters = { 'filter'        => @filtering_values,
                        'custom_filter' => @custom_filtering_parameters,
                        'view'          => @view_parameters.except(:show_as) }
= presentation_choice_form ['table', 'email_list'],
                           @view_parameters[:show_as] || 'table',
                           :params_key_prefix => 'view',
                           :hidden_parameters => hidden_parameters

.technical
  %pre.technical
    SQL:
  %code.technical
    = @participants.to_sql

- case @view_parameters[:show_as]
- when 'email_list'

  = haml :'/pages/org/participants/email_list'

- else

  = haml :'/pages/org/participants/table'

- if main_organiser_logged_in?
  %a.button.new{ :href => fixed_url_with_locale('/org/participants/new'),
                 :role => 'button' }<
    = t 'actions.add'

  %hr/
  %div.download_buttons
    %span.prompt
      = t 'formats.attribute_name:', :attribute => t('actions.download')

    - download_url = fixed_url_with_locale('/download/participants.csv')
    - if @filtering_values
      - download_url << '?' << url_query_from_nested_hash('filter' => @filtering_values)
    %a.button.download{ :href => download_url,
                        :role => 'button' }<
      CSV
