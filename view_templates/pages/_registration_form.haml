%form{ :'accept-charset' => 'UTF-8',
       :action           => fixed_url_with_locale("/#{ @page }"),
       :method           => :post }
  -# JavaScript and CSS for JQuery UI date picker (http://jqueryui.com/)
  = haml :'shared_partials/_jquery_ui_for_forms'

  - if @participant.errors.any?
    = haml :'shared_partials/_form_errors',
           :locals => { :object => @participant }

  %fieldset
    - selected_conference_ids = @participant.participations.map(&:conference_id).to_set
    %legend
      = t 'pages.registration.form.field_labels.participations.which_weeks'
    %ol
      - @conferences.each do |conf|

        - conf_id = conf.id
        - element_id_prefix = "participations_#{ conf_id }_"
        - input_name_prefix = "participations[#{ conf_id }]"
        - participation   = @participant.participations.find { |p| p.conference_id == conf_id }
        - participation ||= Participation.new(:participant   => @participant,
                                              :conference_id => conf_id)

        %li
          %input{ :type  => :hidden,
                  :name  => 'conference_ids[]',
                  :value => conf.id }
          %input{ :type  => :hidden,
                  :name  => input_name_prefix + "[conference_id]",
                  :value => conf.id }
          -# Hidden field to pass a value when the checkbox is not checked
          %input{ :name  => input_name_prefix + "[_destroy]",
                  :type  => :hidden,
                  :value => 1 }
          %input{ :id      => element_id_prefix + "_destroy",
                  :name    => input_name_prefix + "[_destroy]",
                  :type    => :checkbox,
                  :value   => 0,
                  :checked => selected_conference_ids.include?(conf_id) }
          %label{ :for => element_id_prefix + "_destroy" }<
            = conf.title_with_details(@locale)
          %dl.fields
            - [:arrival_date, :departure_date].each do |attr|
              .field
                %dt.label
                  %label{ :for => element_id_prefix + "#{ attr }" }<
                    = t attr, :scope => 'pages.registration.form.field_labels.participations.field_labels'
                %dd.input
                  -# FIXME: set `:value =>`
                  %input{ :id    => element_id_prefix + "#{ attr }",
                          :name  => input_name_prefix + "[#{ attr }]",
                          :type  => :date,
                          :value => participation.public_send(attr) }

  %dl.fields
    - [:first_name, :last_name, :email, :affiliation].each do |attr|
      - required = Participant.attribute_constraints_on(attr)[:required]
      - label_html_classes = []
      - label_html_classes << 'required' if required
      .field
        %dt.label
          %label{ :for   => "participant_#{ attr }",
                  :class => label_html_classes }<
            = @field_labels[attr]
        %dd.input
          %input{ :id       => "participant_#{ attr }",
                  :name     => "participant[#{ attr }]",
                  :required => required,
                  :type     => input_html_type_for_attribute(Participant, attr),
                  :value    => @participant.public_send(attr) }

    .field
      %dt.label
        %label{ :for => 'participant_academic_position' }<
          = t 'pages.registration.form.field_labels.academic_position'
      %dd.input
        %select{ :id    => 'participant_academic_position',
                 :name  => 'participant[academic_position]',
                 :value => @participant.academic_position }
          %option
          - t('pages.registration.form.select_options.academic_positions').each do |p|
            - if p == @participant.academic_position
              %option{:selected => :selected}
                = p
            - else
              %option
                = p

    - [:country, :city, :post_code, :street_address, :phone].each do |attr|
      .field
        %dt.label
          %label{:for => "participant_#{ attr }"}<
            = @field_labels[attr]
        %dd.input
          %input{ :id    => "participant_#{ attr }",
                  :name  => "participant[#{ attr }]",
                  :type  => input_html_type_for_attribute(Participant, attr),
                  :value => @participant.public_send(attr) }

    - [:i_m_t_member, :g_d_r_member, :invitation_needed, :visa_needed].each do |attr|
      .field
        %dt.label
          %label{ :for => "participant_#{ attr }" }<
            = @field_labels[attr]
        %dd.input
          - name = "participant[#{ attr }]"
          -# Hidden field to pass a value when the checkbox is not checked
          %input{ :name  => name,
                  :type  => :hidden,
                  :value => 0 }
          %input{ :id      => "participant_#{ attr }",
                  :name    => name,
                  :type    => :checkbox,
                  :value   => 1,
                  :checked => @participant.public_send(attr) }
          %span
            = t 'yes'

    - [:special_requests].each do |attr|
      .field
        %dt.label
          %label{ :for => "participant_#{ attr }" }<
            = @field_labels[attr]
        %dd.input
          %textarea{ :id   => "participant_#{ attr }",
                     :name => "participant[#{ attr }]" }<
            = preserve do
              &= @participant.public_send(attr)

  -# - co_m_b_conf_id = Conference.co_m_b_conf.id
  -# - if @conferences.map(&:id).include? co_m_b_conf_id

  -#   = haml :'pages/_co_m_b_talk_proposal_fields',
  -#          :locals => { :conference_id => co_m_b_conf_id }

  .actions
    %button.create{:type => :submit, :name => 'button', :value => 'create'}
      = t 'actions.submit'
