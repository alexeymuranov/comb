%form{ :'accept-charset' => 'UTF-8',
       :action           => fixed_url("/#{ @locale }/#{ @page }"),
       :method           => :post }
  -# JavaScript and CSS for JQuery UI date picker (http://jqueryui.com/)
  = haml :'shared_partials/_jquery_ui_for_forms'

  - if @participant.errors.any?
    #form_error_explanation
      %h2
        - if @participant.errors.count == 1
          = t 'activerecord.errors.template.header.one',
              :model => Participant.model_name.human
        - else
          = t 'activerecord.errors.template.header.other',
              :count => @participant.errors.count,
              :model => Participant.model_name.human

      %ul
        - @participant.errors.full_messages.each do |msg|
          %li= msg

  %fieldset
    %dl.fields
      .field
        %dt.label
          = t 'pages.registration.form.field_labels.participations.which_weeks'
        %dd.input
          %ol
            - @conferences.each do |conf|
              %input{ :type  => :hidden,
                      :name  => "participant[participations_attributes][#{ conf.id }][conference_id]",
                      :value => conf.id }
              %li
                -# Hidden field to pass a value when the checkbox is not checked
                %input{ :name  => "participant[participations_attributes][#{ conf.id }][_destroy]",
                        :type  => :hidden,
                        :value => 1 }
                %input{ :id      => "participant_conference_#{ conf.id }_participation__destroy",
                        :name    => "participant[participations_attributes][#{ conf.id }][_destroy]",
                        :type    => :checkbox,
                        :value   => 0,
                        :checked => @participant.conferences.include?(conf) }
                %label{ :for => "participant_conference_#{ conf.id }_participation__destroy" }<
                  = conf.title_with_details(@locale)
                %dl.fields
                  - [:arrival_date, :departure_date].each do |attr|
                    .field
                      %dt.label
                        %label{ :for => "participant_conference_#{ conf.id }_participation_#{ attr }" }<
                          = t attr, :scope => 'pages.registration.form.field_labels.participations.field_labels'
                      %dd.input
                        -# FIXME: set `:value =>`
                        %input{ :id    => "participant_conference_#{ conf.id }_participation_#{ attr }",
                                :name  => "participant[participations_attributes][#{ conf.id }][#{ attr }]",
                                :type  => :date,
                                :value => nil }

  %dl.fields
    - [:first_name, :last_name, :email, :affiliation].each do |attr|
      - required = Participant.attribute_constraints_on(attr)[:required]
      - label_html_classes = []
      - label_html_classes << 'required' if required
      .field
        %dt.label
          %label{ :for   => "participant_#{ attr }",
                  :class => label_html_classes }<
            = @field_labels[attr]
        %dd.input
          %input{ :id       => "participant_#{ attr }",
                  :name     => "participant[#{ attr }]",
                  :required => required,
                  :type     => input_html_type_for_attribute(Participant, attr),
                  :value    => @participant.public_send(attr) }

    .field
      %dt.label
        %label{ :for => 'participant_academic_position' }<
          = t 'pages.registration.form.field_labels.academic_position'
      %dd.input
        %select{ :id    => 'participant_academic_position',
                 :name  => 'participant[academic_position]',
                 :value => @participant.academic_position }
          %option
          - t('pages.registration.form.select_options.academic_positions').each do |p|
            - if p == @participant.academic_position
              %option{:selected => :selected}
                = p
            - else
              %option
                = p

    - [:country, :city, :post_code, :street_address, :phone].each do |attr|
      .field
        %dt.label
          %label{:for => "participant_#{ attr }"}<
            = @field_labels[attr]
        %dd.input
          %input{ :id    => "participant_#{ attr }",
                  :name  => "participant[#{ attr }]",
                  :type  => input_html_type_for_attribute(Participant, attr),
                  :value => @participant.public_send(attr) }

    - [:i_m_t_member, :g_d_r_member, :invitation_needed, :visa_needed].each do |attr|
      .field
        %dt.label
          %label{ :for => "participant_#{ attr }" }<
            = @field_labels[attr]
        %dd.input
          - name = "participant[#{ attr }]"
          -# Hidden field to pass a value when the checkbox is not checked
          %input{ :name  => name,
                  :type  => :hidden,
                  :value => 0 }
          %input{ :id      => "participant_#{ attr }",
                  :name    => name,
                  :type    => :checkbox,
                  :value   => 1,
                  :checked => @participant.public_send(attr) }
          %span
            = t 'yes'

    - [:funding_requests, :special_requests].each do |attr|
      .field
        %dt.label
          %label{ :for => "participant_#{ attr }" }<
            = @field_labels[attr]
        %dd.input
          %textarea{ :id   => "participant_#{ attr }",
                     :name => "participant[#{ attr }]" }<
            = preserve do
              &= @participant.public_send(attr)

  - if @conferences.map(&:id).include? Conference.co_m_b_conf.id
    %fieldset
      %legend
        = t 'pages.registration.form.field_labels.co_m_b_talk_proposal.caption',
            :co_m_b_conf_title => Conference.co_m_b_conf.title(@locale)

      = haml :'pages/_co_m_b_talk_proposal_fields'

  .actions
    %button.create{:type => :submit, :name => 'button', :value => 'create'}
      = t 'buttons.submit'
